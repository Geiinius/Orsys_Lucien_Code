# Prepare essential package

sudo apt-get update -y
sudo apt-get install git git-core gnupg flex bison build-essential zip curl zlib1g-dev python gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig openjdk-11-jdk gcc-aarch64-linux-gnu libssl-dev bc python-mako -y

sudo add-apt-repository universe
sudo apt-get install libncurses5-dev libncursesw5-dev libncurses5 libncurses5:i386 git-core \
gnupg flex bison build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 \
lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig -y
sudo apt-get install -y m4

sudo apt install gcc-arm-linux-gnueabihf libssl-dev

# Prepare the Google APIs folder

mkdir ~/bin
PATH=~/bin:$PATH

curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
chmod a+x ~/bin/repo


#Generate security key for APIs repo (not mandatory)
gpg --recv-key 8BB9AD793E8E6153AF0F9A4416530D5E920F5C65
curl https://storage.googleapis.com/git-repo-downloads/repo.asc | gpg --verify - ~/bin/repo


#Prepare our Android for Rpi repo
mkdir ~/android_rpi
cd ~/android_rpi

repo init -u https://android.googlesource.com/platform/manifest -b android-10.0.0_r32
git clone https://github.com/android-rpi/local_manifests .repo/local_manifests -b android10

repo sync (This might take a long time)

cd kernel/rpi
ARCH=arm scripts/kconfig/merge_config.sh arch/arm/configs/bcm2709_defconfig kernel/configs/android-base.config kernel/configs/android-recommended.config
ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make zImage
ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make dtbs

#Build our RPi environement

cd ~/android_rpi
source build/envsetup.sh
lunch or lunch rpi_eng
#On lunch command, choose rpi_eng(42)

make -j8

# Prepare sd card
Partitions of the card should be set-up like followings.

partition boot 256MB for BOOT : Do fdisk : W95 FAT32(LBA) & Bootable, mkfs.vfat

partition system 2GB for /system : Do fdisk, new primary partition, ext4

partition vendor 256MB for /vendor : Do fdisk, new primary partition, ext4

partition data remainings for /data : Do fdisk, mkfs.ext4

Set volume label for /data partition as userdata

: use -L option of mkfs.ext4, e2label command, or -n option of mkfs.vfat


# Write system & vendor partition
cd out/target/product/rpi3
sudo dd if=system.img of=/dev/<system_prtition> bs=1M
sudo dd if=vendor.img of=/dev/<vendor_partition> bs=1M

# Copy kernel & ramdisk to BOOT partition

device/brcm/rpi3/boot/* to boot:/
kernel/rpi/arch/arm/boot/zImage to boot:/
kernel/rpi/arch/arm/boot/dts/bcm2710-rpi-3-b.dtb to boot:/
kernel/rpi/arch/arm/boot/dts/overlays/vc4-kms-v3d.dtbo to p1:/overlays/vc4-kms-v3d.dtbo
out/target/product/rpi3/ramdisk.img to boot:/
